@{
    Layout = "_Layout";
}

<link href="~/css/purchase.css" rel="stylesheet" />

  <!-- Main Content -->
<div class="main-wrapper">
    <div class="page-header">
        <h2>Purchase Invoice</h2>
        <p>Create and manage purchase orders from suppliers</p>
    </div>

    <div class="card">
        <form id="purchaseForm">
            <!-- Invoice Header -->
            <div class="invoice-header-section">
                <div class="form-section">
                    <div class="form-group">
                        <label class="form-label">User</label>
                        <input type="text" class="form-control" value="Admin" disabled>
                    </div>

                    <div class="form-group">
                        <label class="form-label">Invoice No</label>
                        <input type="text" class="form-control" id="invoiceNo" value="1" disabled>
                    </div>

                    <div class="form-group">
                        <label class="form-label">Bill No</label>
                        <input type="text" class="form-control" id="billNo" placeholder="Enter supplier bill number">
                    </div>

                    <div class="form-group">
                        <label class="form-label">Invoice Date</label>
                        <input type="date" class="form-control" id="invoiceDate" value="2025-10-24">
                    </div>

                    <div class="form-group">
                        <label class="form-label">Branch</label>
                        <select class="form-control" id="branch">
                            <option>Main Branch</option>
                            <option>Branch 2</option>
                            <option>Branch 3</option>
                        </select>
                    </div>
                </div>

                <div class="form-section">
                    <div class="form-group">
                        <label class="form-label">Supplier Account</label>
                        <div class="supplier-lookup">
                            <input type="text" class="form-control" id="supplierAccount" placeholder="Search supplier...">
                            <button type="button" class="btn-icon">👤</button>
                        </div>
                    </div>

                    <div class="form-group">
                        <label class="form-label">Supplier Details</label>
                        <textarea class="form-control" id="supplierDetails" placeholder="Supplier details..." readonly></textarea>
                    </div>

                    <div class="form-group">
                        <label class="form-label">Payment Mode</label>
                        <select class="form-control" id="paymentMode">
                            <option>Credit</option>
                            <option>Cash</option>
                            <option>Cheque</option>
                            <option>Bank Transfer</option>
                        </select>
                    </div>
                </div>
            </div>

            <!-- Items Table -->
            <div class="items-section">
                <h3 class="section-title">Purchase Items</h3>

                <div class="table-container">
                    <table class="items-table">
                        <thead>
                            <tr>
                                <th style="width: 50px;">#</th>
                                <th style="width: 80px;">Item ID</th>
                                <th style="width: 250px;">Item Name</th>
                                <th style="width: 100px;">Quantity</th>
                                <th style="width: 120px;">Pur. Price</th>
                                <th style="width: 120px;">Sale Rate</th>
                                <th style="width: 100px;">Disc %</th>
                                <th style="width: 120px;">Disc Amt</th>
                                <th style="width: 120px;">Total</th>
                                <th style="width: 60px;">Action</th>
                            </tr>
                        </thead>
                        <tbody id="itemsBody">
                            <!-- Rows will be added here -->
                        </tbody>
                    </table>
                </div>

                <button type="button" class="add-row-btn" id="addRowBtn">
                    ➕ Add New Item
                </button>
            </div>

            <!-- Footer -->
            <div class="footer-grid">
                <div class="form-section">
                    <div class="form-group">
                        <label class="form-label">Remarks</label>
                        <textarea class="form-control" id="remarks" placeholder="Enter remarks..."></textarea>
                    </div>

                    <div class="form-group">
                        <label class="form-label">Print Style</label>
                        <select class="form-control" id="printStyle">
                            <option>Thermal</option>
                            <option>A4 Size</option>
                            <option>Letter Size</option>
                        </select>
                    </div>
                </div>

                <div class="totals-box">
                    <div class="total-row">
                        <span class="total-label">Total Quantity:</span>
                        <input type="text" class="total-input" id="totalQty" value="0" readonly>
                    </div>

                    <div class="total-row">
                        <span class="total-label">Invoice Total:</span>
                        <input type="text" class="total-input" id="invoiceTotal" value="0.00" readonly>
                    </div>

                    <div class="total-row">
                        <span class="total-label">GST:</span>
                        <div class="total-with-percent">
                            <input type="number" class="percent-input" id="gstPercent" value="0" min="0" max="100">
                            <span>% =</span>
                            <input type="text" class="total-input" id="gstAmount" value="0.00" readonly style="width: 100px;">
                        </div>
                    </div>

                    <div class="total-row">
                        <span class="total-label">Freight Exp:</span>
                        <input type="number" class="total-input" id="freight" value="0" step="0.01">
                    </div>

                    <div class="total-row">
                        <span class="total-label">Other Exp:</span>
                        <input type="number" class="total-input" id="otherExp" value="0" step="0.01">
                    </div>

                    <div class="total-row">
                        <span class="total-label">Invoice Discount:</span>
                        <div class="total-with-percent">
                            <input type="number" class="percent-input" id="discPercent" value="0" min="0" max="100">
                            <span>% =</span>
                            <input type="text" class="total-input" id="discAmount" value="0.00" readonly style="width: 100px;">
                        </div>
                    </div>

                    <div class="grand-total">
                        <span>Net Amount:</span>
                        <span id="netAmount">0.00</span>
                    </div>
                </div>
            </div>

            <!-- Action Buttons -->
            <div class="btn-group">
                <button type="button" class="btn btn-danger" id="deleteBtn">🗑️ Delete</button>
                <button type="button" class="btn btn-secondary" id="editBtn">✏️ Edit</button>
                <button type="button" class="btn btn-primary" id="newBtn">➕ New</button>
                <button type="submit" class="btn btn-success">💾 Save</button>
            </div>
        </form>
    </div>
</div>

<script>
    let rowCounter = 0;

    // Add first row on page load
    window.addEventListener('DOMContentLoaded', function() {
        addNewRow();
    });

    // Add new row
    document.getElementById('addRowBtn').addEventListener('click', addNewRow);

    function addNewRow() {
        rowCounter++;
        const tbody = document.getElementById('itemsBody');

        const newRow = document.createElement('tr');
        newRow.innerHTML = `
            <td>${rowCounter}</td>
            <td><input type="text" class="table-input" placeholder="ID"></td>
            <td><input type="text" class="table-input" placeholder="Enter item name"></td>
            <td><input type="number" class="table-input" value="0" step="0.01" data-field="qty"></td>
            <td><input type="number" class="table-input" value="0" step="0.01" data-field="price"></td>
            <td><input type="number" class="table-input" value="0" step="0.01"></td>
            <td><input type="number" class="table-input highlight" value="0" data-field="disc"></td>
            <td><input type="number" class="table-input" value="0" readonly></td>
            <td><input type="number" class="table-input" value="0" readonly></td>
            <td><button type="button" class="btn-remove">×</button></td>
        `;

        tbody.appendChild(newRow);

        // Add event listeners to inputs
        const inputs = newRow.querySelectorAll('input[data-field]');
        inputs.forEach(input => {
            input.addEventListener('input', function() {
                calculateRowTotal(newRow);
            });
        });

        // Add event listener to remove button
        newRow.querySelector('.btn-remove').addEventListener('click', function() {
            removeRow(newRow);
        });
    }

    function removeRow(row) {
        if (document.getElementById('itemsBody').rows.length > 1) {
            if (confirm('Remove this item?')) {
                row.remove();
                updateRowNumbers();
                calculateTotals();
            }
        } else {
            alert('At least one row is required!');
        }
    }

    function updateRowNumbers() {
        const rows = document.querySelectorAll('#itemsBody tr');
        rows.forEach((row, index) => {
            row.cells[0].textContent = index + 1;
        });
        rowCounter = rows.length;
    }

    function calculateRowTotal(row) {
        const cells = row.cells;
        const qty = parseFloat(cells[3].querySelector('input').value) || 0;
        const price = parseFloat(cells[4].querySelector('input').value) || 0;
        const discPercent = parseFloat(cells[6].querySelector('input').value) || 0;

        const subtotal = qty * price;
        const discAmount = (subtotal * discPercent) / 100;
        const total = subtotal - discAmount;

        cells[7].querySelector('input').value = discAmount.toFixed(2);
        cells[8].querySelector('input').value = total.toFixed(2);

        calculateTotals();
    }

    function calculateTotals() {
        const rows = document.querySelectorAll('#itemsBody tr');
        let totalQty = 0;
        let invoiceTotal = 0;

        rows.forEach(row => {
            const qty = parseFloat(row.cells[3].querySelector('input').value) || 0;
            const total = parseFloat(row.cells[8].querySelector('input').value) || 0;
            totalQty += qty;
            invoiceTotal += total;
        });

        const gstPercent = parseFloat(document.getElementById('gstPercent').value) || 0;
        const freight = parseFloat(document.getElementById('freight').value) || 0;
        const otherExp = parseFloat(document.getElementById('otherExp').value) || 0;
        const discPercent = parseFloat(document.getElementById('discPercent').value) || 0;

        const gstAmount = (invoiceTotal * gstPercent) / 100;
        const discAmount = (invoiceTotal * discPercent) / 100;
        const netAmount = invoiceTotal + gstAmount + freight + otherExp - discAmount;

        document.getElementById('totalQty').value = totalQty.toFixed(0);
        document.getElementById('invoiceTotal').value = invoiceTotal.toFixed(2);
        document.getElementById('gstAmount').value = gstAmount.toFixed(2);
        document.getElementById('discAmount').value = discAmount.toFixed(2);
        document.getElementById('netAmount').textContent = netAmount.toFixed(2);
    }

    // Event listeners for total calculations
    document.getElementById('gstPercent').addEventListener('input', calculateTotals);
    document.getElementById('freight').addEventListener('input', calculateTotals);
    document.getElementById('otherExp').addEventListener('input', calculateTotals);
    document.getElementById('discPercent').addEventListener('input', calculateTotals);

    // New Invoice
    document.getElementById('newBtn').addEventListener('click', function() {
        if (confirm('Create new invoice? Unsaved changes will be lost.')) {
            document.getElementById('purchaseForm').reset();
            document.getElementById('itemsBody').innerHTML = '';
            rowCounter = 0;
            addNewRow();
            calculateTotals();
        }
    });

    // Edit Invoice
    document.getElementById('editBtn').addEventListener('click', function() {
        alert('Edit mode activated');
    });

    // Delete Invoice
    document.getElementById('deleteBtn').addEventListener('click', function() {
        if (confirm('Delete this invoice?')) {
            document.getElementById('purchaseForm').reset();
            document.getElementById('itemsBody').innerHTML = '';
            rowCounter = 0;
            addNewRow();
            calculateTotals();
            alert('Invoice deleted successfully!');
        }
    });

    // Form Submit
    document.getElementById('purchaseForm').addEventListener('submit', function(e) {
        e.preventDefault();

        const supplierAccount = document.getElementById('supplierAccount').value;
        if (!supplierAccount) {
            alert('Please select a supplier!');
            return;
        }

        const rows = document.querySelectorAll('#itemsBody tr');
        let hasValidItem = false;
        rows.forEach(row => {
            const itemName = row.cells[2].querySelector('input').value;
            const qty = parseFloat(row.cells[3].querySelector('input').value) || 0;
            if (itemName && qty > 0) {
                hasValidItem = true;
            }
        });

        if (!hasValidItem) {
            alert('Please add at least one item with quantity!');
            return;
        }

        const invoiceData = {
            invoiceNo: document.getElementById('invoiceNo').value,
            billNo: document.getElementById('billNo').value,
            invoiceDate: document.getElementById('invoiceDate').value,
            branch: document.getElementById('branch').value,
            supplierAccount: supplierAccount,
            paymentMode: document.getElementById('paymentMode').value,
            remarks: document.getElementById('remarks').value,
            totalQty: document.getElementById('totalQty').value,
            invoiceTotal: document.getElementById('invoiceTotal').value,
            netAmount: document.getElementById('netAmount').textContent
        };

            // Prepare items data
    const items = [];
    rows.forEach(row => {
        const item = {
            Itemid: row.cells[1].querySelector('input').value,
            Desc: row.cells[2].querySelector('input').value,
            Quantity: parseFloat(row.cells[3].querySelector('input').value) || 0,
            PurPrice: parseFloat(row.cells[4].querySelector('input').value) || 0,
            SalePrice: parseFloat(row.cells[5].querySelector('input').value) || 0,
            DiscPer: parseFloat(row.cells[6].querySelector('input').value) || 0,
            DiscAmt: parseFloat(row.cells[7].querySelector('input').value) || 0,
            Total: parseFloat(row.cells[8].querySelector('input').value) || 0
        };
        items.push(item);
    });

    // Full payload
    const payload = {
        PurchaseDate: document.getElementById('invoiceDate').value,
        VendorID: supplierAccount,
        BillNo: document.getElementById('billNo').value,
        BranchID: 1,
        PaymentMode: document.getElementById('paymentMode').selectedIndex,
        Remarks: document.getElementById('remarks').value,
        GSTPer: parseFloat(document.getElementById('gstPercent').value),
        GSTAmount: parseFloat(document.getElementById('gstAmount').value),
        FreightExp: parseFloat(document.getElementById('freight').value),
        OtherExp: parseFloat(document.getElementById('otherExp').value),
        Discount: parseFloat(document.getElementById('discAmount').value),
        TotalAmount: parseFloat(document.getElementById('invoiceTotal').value),
        NetAmount: parseFloat(document.getElementById('netAmount').textContent),
        Items: items
    };

    // Send to controller
    fetch('/Purchase/Save', {
        method: 'POST',
        headers: { 'Content-Type': 'application/json' },
        body: JSON.stringify(payload)
    })
    .then(res => res.json())
    .then(data => {
        if (data.success) {
            alert('✅ ' + data.message);
        } else {
            alert('❌ Failed: ' + (data.message || 'Unknown error'));
        }
    })
    .catch(err => {
        console.error(err);
        alert('Error saving invoice.');
    });
    });
</script>