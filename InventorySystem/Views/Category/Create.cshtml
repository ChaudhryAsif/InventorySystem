@model InventorySystem.Core.Models.Category
@{
    Layout = "_Layout";
}

<style>
/*     :root {
        --primary-color: #2c5f7c;
        --primary-dark: #1a3a4d;
        --secondary-color: #5cb85c;
        --danger-color: #dc3545;
        --bg-color: #f4f6f9;
        --card-bg: #ffffff;
        --text-primary: #2c3e50;
        --text-secondary: #6c757d;
        --border-color: #dee2e6;
        --shadow-sm: 0 2px 4px rgba(0,0,0,0.1);
        --shadow-md: 0 4px 6px rgba(0,0,0,0.1);
        --shadow-lg: 0 10px 25px rgba(0,0,0,0.15);
        --radius-sm: 6px;
        --radius-md: 10px;
        --radius-lg: 15px;
    } */

   /*  * {
        margin: 0;
        padding: 0;
        box-sizing: border-box;
    }

    body {
        font-family: 'Segoe UI', Tahoma, Geneva, Verdana, sans-serif;
        background: var(--bg-color);
        color: var(--text-primary);
        line-height: 1.6;
    }

    .main-header {
        background: linear-gradient(135deg, var(--primary-color) 0%, var(--primary-dark) 100%);
        color: white;
        padding: 1rem 2rem;
        box-shadow: var(--shadow-md);
        position: fixed;
        top: 0;
        left: 0;
        right: 0;
        z-index: 1000;
    }

    .header-content {
        display: flex;
        justify-content: space-between;
        align-items: center;
        max-width: 1600px;
        margin: 0 auto;
    }

    .header-title {
        display: flex;
        align-items: center;
        gap: 1rem;
    }

        .header-title h1 {
            font-size: 1.5rem;
            font-weight: 600;
        }

    .header-actions {
        display: flex;
        align-items: center;
        gap: 1rem;
    }

    .header-select {
        background: rgba(255, 255, 255, 0.15);
        border: 1px solid rgba(255, 255, 255, 0.3);
        color: white;
        padding: 0.5rem 1rem;
        border-radius: var(--radius-sm);
        font-size: 0.9rem;
        min-width: 150px;
    }

    .header-btn {
        background: var(--secondary-color);
        color: white;
        border: none;
        padding: 0.6rem 1.2rem;
        border-radius: var(--radius-sm);
        cursor: pointer;
        font-weight: 500;
        transition: all 0.3s;
    }

        .header-btn:hover {
            transform: translateY(-2px);
            box-shadow: var(--shadow-md);
        }

        .header-btn.danger {
            background: var(--danger-color);
        } */

    .main-content {
        margin-top: 70px;
        padding: 2rem;
        min-height: calc(100vh - 70px);
        display: flex;
        align-items: center;
        justify-content: center;
    }

    .form-container {
        max-width: 800px;
        width: 100%;
    }

    .page-header {
        text-align: center;
        margin-bottom: 2rem;
    }

        .page-header h2 {
            color: var(--primary-color);
            font-size: 2rem;
            font-weight: 600;
            margin-bottom: 0.5rem;
        }

        .page-header p {
            color: var(--text-secondary);
        }

    .card {
        background: var(--card-bg);
        border-radius: var(--radius-lg);
        box-shadow: var(--shadow-lg);
        padding: 2.5rem;
        margin-bottom: 1.5rem;
    }

    .form-section {
        margin-bottom: 2rem;
    }

    .section-title {
        font-size: 1.1rem;
        font-weight: 600;
        color: var(--primary-color);
        margin-bottom: 1.5rem;
        padding-bottom: 0.5rem;
        border-bottom: 2px solid var(--border-color);
    }

    .form-group {
        margin-bottom: 1.5rem;
    }

    .form-label {
        display: block;
        margin-bottom: 0.5rem;
        font-weight: 500;
        color: var(--text-primary);
        font-size: 0.95rem;
    }

        .form-label.required::after {
            content: ' *';
            color: var(--danger-color);
        }

    .form-control {
        width: 100%;
        padding: 0.85rem 1rem;
        border: 2px solid var(--border-color);
        border-radius: var(--radius-sm);
        font-size: 0.95rem;
        transition: all 0.3s;
        background: white;
    }

        .form-control:focus {
            outline: none;
            border-color: var(--primary-color);
            box-shadow: 0 0 0 3px rgba(44, 95, 124, 0.1);
        }

        .form-control:disabled {
            background: #f8f9fa;
            cursor: not-allowed;
        }

    .form-row {
        display: grid;
        grid-template-columns: 1fr 2fr;
        gap: 1.5rem;
        align-items: start;
    }

    .btn-group {
        display: flex;
        gap: 1rem;
        justify-content: center;
        margin-top: 2rem;
        padding-top: 2rem;
        border-top: 2px solid var(--border-color);
        flex-wrap: nowrap;
    }

    .btn {
        padding: 0.85rem 2rem;
        border: none;
        border-radius: var(--radius-sm);
        font-size: 1rem;
        font-weight: 600;
        cursor: pointer;
        transition: all 0.3s;
        display: inline-flex;
        align-items: center;
        gap: 0.5rem;
        min-width: 120px;
        justify-content: center;
        display: inline-flex;
    }

        .btn:hover {
            transform: translateY(-2px);
            box-shadow: var(--shadow-md);
        }

    .btn-primary {
        background: var(--primary-color);
        color: white;
    }

        .btn-primary:hover {
            background: var(--primary-dark);
        }

    .btn-success {
        background: var(--secondary-color);
        color: white;
    }

        .btn-success:hover {
            background: #4a9d4a;
        }

    .btn-secondary {
        background: #6c757d;
        color: white;
    }

        .btn-secondary:hover {
            background: #5a6268;
        }

    .info-box {
        background: #e3f2fd;
        border-left: 4px solid var(--primary-color);
        padding: 1rem;
        border-radius: var(--radius-sm);
        margin-top: 1rem;
    }

        .info-box p {
            margin: 0;
            color: var(--text-secondary);
            font-size: 0.9rem;
        }

    

    .btn-group {
        flex-direction: column;
    }

    .btn {
        width: 100%;
    }

  /*   } */
</style>

<main class="main-content">
    <div class="form-container">
        <div class="page-header">
            <h2>Item Category Management</h2>
            <p>Create and manage product categories for your inventory</p>
        </div>

        <div class="card">
            <form id="categoryForm">
                <div class="form-section">
                    <h3 class="section-title">Category Information</h3>

                    <div class="form-row">
                        <div class="form-group">
                            <label class="form-label required">Category ID</label>
                            <input type="text" class="form-control" id="categoryId" value="2" placeholder="Auto-generated" readonly>
                        </div>

                        <div class="form-group">
                            <label class="form-label required">Category Name</label>
                            <input type="text" class="form-control" id="categoryName" placeholder="Enter category name" required>
                        </div>
                    </div>

                    <div class="info-box">
                        <p>💡 <strong>Tip:</strong> Use descriptive names for categories to help organize your inventory effectively.</p>
                    </div>
                </div>

                <div class="btn-group">
                    <button type="button" class="btn btn-primary" onclick="handleNew()">
                        ➕ New
                    </button>
                    <button type="button" class="btn btn-secondary" onclick="handleEdit()">
                        ✏️ Edit
                    </button>
                    <button type="submit" class="btn btn-success">
                        💾 Save
                    </button>
                </div>
            </form>
        </div>
    </div>
</main>

<script>
    // Form handling
    document.getElementById('categoryForm').addEventListener('submit', function(e) {
        e.preventDefault();

        const categoryName = document.getElementById('categoryName').value;
        const categoryId = document.getElementById('categoryId').value;

        if (!categoryName) {
            alert('Please enter a category name');
            return;
        }

        // Simulate save
        alert(`Category saved successfully!\nID: ${categoryId}\nName: ${categoryName}`);

        // You would typically send this data to your ASP.NET Core backend here
        // Example: fetch('/api/categories', { method: 'POST', body: JSON.stringify({...}) })
    });

    function handleNew() {
        document.getElementById('categoryName').value = '';
        const newId = parseInt(document.getElementById('categoryId').value) + 1;
        document.getElementById('categoryId').value = newId;
        document.getElementById('categoryName').focus();
    }

    function handleEdit() {
        // In real application, this would open a modal or populate form with selected category
        alert('Edit mode: Select a category from the list to edit');
    }
</script>
