@model IEnumerable<InventorySystem.Core.Models.ItemCategory>

@{
    Layout = "_Layout";
}

<link href="~/css/itemcategory.css" rel="stylesheet" />

<!-- Main Content -->
<div class="main-wrapper">
    <!-- Page Header -->
    <div class="page-header">
        <div class="page-title">
            <h2>Item Category</h2>
            <p>Manage all product categories in inventory</p>
        </div>
        <button class="btn btn-success" onclick="openModal()">
            ➕ Add Category
        </button>
    </div>

    <!-- Search Section -->
    <div class="search-section">
        <div class="search-box">
            <span style="font-size: 1.2rem;">🔍</span>
            <input type="text" class="search-input" placeholder="Search categories..." id="searchInput" onkeyup="searchTable()">
        </div>
    </div>

    <!-- Data Table Card -->
    <div class="card">
        <div class="table-container">
            <table class="data-table" id="categoryTable">
                <thead>
                    <tr>
                        <th style="width: 100px;">Category ID</th>
                        <th>Category Name</th>
                        <th>Description</th>
                        <th style="width: 150px;">Created Date</th>
                        <th style="width: 120px;">Status</th>
                        <th style="width: 200px;">Actions</th>
                    </tr>
                </thead>
                <tbody id="categoryTableBody">
                    @foreach (var category in Model)
                    {
                        <tr>
                            <td>@category.CategoryId</td>
                            <td>@category.CategoryName</td>
                            <td>@category.Description</td>
                            <td>@(category.CreatedDate != null ? category.CreatedDate.Value.ToString("yyyy-MM-dd") : "")</td>
                            <td>
                                <span class="badge @(category.IsActive != null && category.IsActive.Value ? "badge-success" : "badge-danger")">
                                    @(category.IsActive != null && category.IsActive.Value ? "Active" : "Inactive")
                                </span>
                            </td>
                            <td>
                                <div class="action-buttons">
                                    <button class="btn btn-primary btn-sm"
                                            onclick="editCategory(@category.CategoryId, '@category.CategoryName', @((category.IsActive ?? false).ToString().ToLower()), '@category.Description')">
                                        ✏️ Edit
                                    </button>
                                    <button class="btn btn-danger btn-sm"
                                            onclick="deleteCategory('@category.CategoryId')">
                                        🗑️ Delete
                                    </button>
                                </div>
                            </td>
                        </tr>
                    }
                </tbody>

            </table>
        </div>
    </div>
</div>

<!-- Add/Edit Modal -->
<div class="modal" id="categoryModal">
    <div class="modal-dialog">
        <div class="modal-header">
            <h3 class="modal-title" id="modalTitle">Add New Category</h3>
            <button class="modal-close" onclick="closeModal('categoryModal')">&times;</button>
        </div>
        <form id="categoryForm" onsubmit="saveCategory(event)">
            <div class="modal-body">
                <input type="hidden" id="categoryId">

                <div class="form-group">
                    <label class="form-label required">Category Name</label>
                    <input type="text" class="form-control" id="categoryName" required>
                </div>

                <div class="form-group">
                    <label class="form-label">Description</label>
                    <textarea class="form-control" id="categoryDescription" rows="3"></textarea>
                </div>

                <div class="form-group">
                    <label class="form-label">Status</label>
                    <select class="form-control" id="categoryStatus">
                        <option value="true">Active</option>
                        <option value="false">Inactive</option>
                    </select>
                </div>
            </div>
            <div class="modal-footer">
                <button type="button" class="btn btn-danger" onclick="closeModal('categoryModal')">✖ Cancel</button>
                <button type="submit" class="btn btn-success">💾 Save</button>
            </div>
        </form>
    </div>
</div>

<script>

    // Load all categories
function loadCategories() {
    fetch('/Category/GetList')
        .then(response => response.json())
        .then(result => {
            if (result.success) {
                const tableBody = document.getElementById("categoryTableBody");
                tableBody.innerHTML = ""; // Clear old rows

                result.data.forEach(category => {
                    const row = document.createElement("tr");

                    row.innerHTML = `
                        <td>${category.categoryId}</td>
                        <td>${category.categoryName}</td>
                        <td>${category.description || ""}</td>
                        <td>${category.createdDate ? category.createdDate.split('T')[0] : ""}</td>
                        <td>
                            <span class="badge ${category.isActive ? "badge-success" : "badge-danger"}">
                                ${category.isActive ? "Active" : "Inactive"}
                            </span>
                        </td>
                        <td>
                            <div class="action-buttons">
                                <button class="btn btn-primary btn-sm" 
                                    onclick="editCategory(${category.categoryId}, '${escapeQuotes(category.categoryName)}', ${category.isActive}, '${escapeQuotes(category.description)}')">
                                    ✏️ Edit
                                </button>
                                <button class="btn btn-danger btn-sm" onclick="deleteCategory(${category.categoryId})">
                                    🗑️ Delete
                                </button>
                            </div>
                        </td>
                    `;

                    tableBody.appendChild(row);
                });
            } else {
                console.error("Failed to load categories");
            }
        })
        .catch(error => console.error("Error:", error));
}

// Helper to escape quotes in text (avoids breaking HTML)
function escapeQuotes(str) {
    return str ? str.replace(/'/g, "\\'").replace(/"/g, '\\"') : "";
}

            let isEditMode = false;

            function openModal() {
                isEditMode = false;
                document.getElementById('modalTitle').textContent = 'Add New Category';
                document.getElementById('categoryForm').reset();
                document.getElementById('categoryModal').classList.add('show');
            }

            // function closeModal() {
            //     document.getElementById('categoryModal').classList.remove('show');
            // }

            function editCategory(id, name, status, description) {
                isEditMode = true;

                document.getElementById('modalTitle').textContent = 'Edit Category';
                document.getElementById('categoryId').value = id;
                document.getElementById('categoryName').value = name;
                 document.getElementById('categoryDescription').value = description || "";
                document.getElementById('categoryStatus').value = status.toString();
                document.getElementById('categoryModal').classList.add('show');
            }

            
    function saveCategory(event) {
        event.preventDefault();

        const name = document.getElementById('categoryName').value.trim();
        const description = document.getElementById('categoryDescription').value;
        const status = document.getElementById('categoryStatus').value;
        const id = document.getElementById('categoryId') ? document.getElementById('categoryId').value : 0;
        var categoryId = $("#categoryId").val();
        // Simple validation
        if (name === "") {
            alert("Please enter category name");
            return;
        }

        const category = {
            CategoryId: id,
            CategoryName: name,
            Description: description,
            IsActive: status
        };

        $.ajax({
                url: '/Category/Save',
                type: 'POST',
                data: category,
                success: function (response) {
                    if (response.success) {
                            loadCategories();
                        closeModal("categoryModal");
                    } else {
                        alert('Error: ' + response.message);
                    }
                },
                error: function (xhr, status, error) {
                    console.error(error);
                    alert('Something went wrong while saving category.');
                }
        });
    }

    async function deleteCategory(id) {
        if (confirm('Are you sure you want to delete this category?')) {
            try {
                    const response = await fetch(`/Category/Delete?id=${id}`, { method: 'POST' });

                const result = await response.json();

                if (result.success) {
                    // Remove row from table
                    const rows = document.querySelectorAll('#categoryTableBody tr');
                    rows.forEach(row => {
                        if (row.cells[0].textContent == id) {
                            row.remove();
                        }
                    });

                    alert(result.message);
                } else {
                    alert(result.message || 'Delete failed.');
                }
            } catch (error) {
                console.error('Error:', error);
                alert('An error occurred while deleting the category.');
            }
        }
    }

            function searchTable() {
                const input = document.getElementById('searchInput');
                const filter = input.value.toUpperCase();
                const table = document.getElementById('categoryTable');
                const rows = table.getElementsByTagName('tr');

                for (let i = 1; i < rows.length; i++) {
                    const cells = rows[i].getElementsByTagName('td');
                    let found = false;

                    for (let j = 0; j < cells.length; j++) {
                        const cell = cells[j];
                        if (cell) {
                            const textValue = cell.textContent || cell.innerText;
                            if (textValue.toUpperCase().indexOf(filter) > -1) {
                                found = true;
                                break;
                            }
                        }
                    }

                    rows[i].style.display = found ? '' : 'none';
                }
            }

            // Close modal on outside click
            document.getElementById('categoryModal').addEventListener('click', function(e) {
                if (e.target === this) {
                    closeModal("categoryModal");
                }
            });

            // Close modal with Escape key
            document.addEventListener('keydown', function(e) {
                if (e.key === 'Escape') {
                    closeModal("categoryModal");
                }
            });
</script>